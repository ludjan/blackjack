My solution to the case 'Can you beat the dealer at 21?'

Contents: 
1. How to run
2. Testing
3. Structure

1. How to run
- I have used Apache Ant as build tool in this project.
- The blackjack.jar file is a compiled and runnable version of the game.
- (If you have Ant installed, you can use the default command 'ant' to recompile to project and reproduce the .jar file.)

- The jar file can be run (from root) by typing:
java -jar blackjack.jar
or
java -jar blackjack.jar 'path/to/file.txt'

- The program will only accept files of with file extension .txt.

2. Testing
- I have used JUnit for testing. Tests have mostly been written in parallell with development.
- All 36 tests pass on my machine.
- The testing of the BlackJack logic was mainly done by running program manually with the different input files

3. Structure
I have tried to give the program a reasonable structure, which made pretty good sense to me at the time.

In the program, a BlackjackDealer is a specialized kind of BlackjackPlayer who can deal cards, and who has a different "wantMoreCards()" strategy than a normal player.

You need both a BlackjackPlayer and a BlackjackDealer to instatiate a game of Blackjack.
The Blackjack game then controls the flow of events. 
As a game of Blackjack is played, the different 'phases' are split up into smaller private methods for readability.
The players themselves contain the logic handling if they want to keep playing or not.
Not all phases are needed if a winner is determined early on.

At the end of a game of Blackjack, you can get the result of the game.
